<?php
/**
 * @since: 29/03/2023
 * Employee class
 * generated by Amimul Ahsan.
 */

class Employee {
	// Connection
	private $conn;
	// Table
	private $db_table = "employee";
	// Columns
	public $id;
	public $name;
	public $email;
	public $phone;
	public $age;
	public $designation;


	/**
	 * Employee constructor.
	 *
	 * @param $db
	 */
	public function __construct( $db ) {
		$this->conn = $db;
	}

	/**
	 * The getEmployees is generated by Amimul Ahsan
	 *
	 * @return mixed
	 */
	public function getEmployees() {
		$sqlQuery = "SELECT id, name, email, age, designation, phone FROM " . $this->db_table . "";
		$stmt     = $this->conn->prepare( $sqlQuery );
		$stmt->execute();

		return $stmt;
	}

	// CREATE
	public function createEmployee() {
		$sqlQuery = "INSERT INTO
                        " . $this->db_table . "
                    SET
                        name = :name, 
                        email = :email, 
                        age = :age, 
                        designation = :designation, 
                        phone = :phone";

		$stmt = $this->conn->prepare( $sqlQuery );

		// sanitize input values
		$this->name        = htmlspecialchars( strip_tags( $this->name ) );
		$this->email       = htmlspecialchars( strip_tags( $this->email ) );
		$this->age         = htmlspecialchars( strip_tags( $this->age ) );
		$this->designation = htmlspecialchars( strip_tags( $this->designation ) );
		$this->phone     =  htmlspecialchars( strip_tags( $this->phone ) );

		// bind data
		$stmt->bindParam( ":name", $this->name );
		$stmt->bindParam( ":email", $this->email );
		$stmt->bindParam( ":age", $this->age );
		$stmt->bindParam( ":designation", $this->designation );
		$stmt->bindParam( ":phone", $this->phone );

		if ( $stmt->execute() ) {
			return true;
		}

		return false;
	}

	// READ single
	public function getSingleEmployee() {
		$sqlQuery = "SELECT
                        id, 
                        name, 
                        email, 
                        age, 
                        designation, 
                        phone
                      FROM
                        " . $this->db_table . "
                    WHERE 
                       id = ?
                    LIMIT 0,1";
		$stmt     = $this->conn->prepare( $sqlQuery );
		$stmt->bindParam( 1, $this->id );
		$stmt->execute();
		$dataRow = $stmt->fetch( PDO::FETCH_ASSOC );
		if($dataRow)
		{
			$this->name        = $dataRow['name'];
			$this->email       = $dataRow['email'];
			$this->age         = $dataRow['age'];
			$this->designation = $dataRow['designation'];
			$this->phone     = $dataRow['phone'];
		}

	}

	// UPDATE
	public function updateEmployee() {
		$sqlQuery = "UPDATE
                        " . $this->db_table . "
                    SET
                        name = :name, 
                        email = :email, 
                        age = :age, 
                        designation = :designation, 
                        phone = :phone
                    WHERE 
                        id = :id";

		$stmt = $this->conn->prepare( $sqlQuery );

		$this->name        = htmlspecialchars( strip_tags( $this->name ) );
		$this->email       = htmlspecialchars( strip_tags( $this->email ) );
		$this->age         = htmlspecialchars( strip_tags( $this->age ) );
		$this->designation = htmlspecialchars( strip_tags( $this->designation ) );
		$this->phone     =   htmlspecialchars( strip_tags( $this->phone ) );
		$this->id          = htmlspecialchars( strip_tags( $this->id ) );

		// bind data
		$stmt->bindParam( ":name", $this->name );
		$stmt->bindParam( ":email", $this->email );
		$stmt->bindParam( ":age", $this->age );
		$stmt->bindParam( ":designation", $this->designation );
		$stmt->bindParam( ":phone", $this->phone );
		$stmt->bindParam( ":id", $this->id );

		if ( $stmt->execute() ) {
			return true;
		}

		return false;
	}

	// DELETE
	function deleteEmployee() {
		$sqlQuery = "DELETE FROM " . $this->db_table . " WHERE id = ?";
		$stmt     = $this->conn->prepare( $sqlQuery );

		$this->id = htmlspecialchars( strip_tags( $this->id ) );

		$stmt->bindParam( 1, $this->id );

		if ( $stmt->execute() ) {
			return true;
		}

		return false;
	}


}